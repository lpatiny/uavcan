'use strict';

const { prependCRC } = require('../CRC');

describe('prependCRC', () => {
  it('long byte array', () => {
    let bytes = [
      0xc2,
      0x51,
      0x01,
      0x00,
      0x00,
      0x00,
      0x00,
      0x01,
      0x00,
      0x01,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x01,
      0x02,
      0x03,
      0x04,
      0x05,
      0x06,
      0x07,
      0x08,
      0x09,
      0x0a,
      0x0b,
      0x0c,
      0x0d,
      0x0e,
      0x0f,
      0x00,
      0x63,
      0x68,
      0x2e,
      0x6f,
      0x63,
      0x74,
      0x61,
      0x6e,
      0x69,
      0x73,
      0x2e,
      0x6f,
      0x69,
      0x62,
      0x75,
      0x73,
      0x2e,
      0x6d,
      0x69,
      0x6e,
      0x69,
      0x2e,
      0x61,
      0x64,
      0x63,
      0x2d,
      0x64,
      0x61,
      0x63,
      0x2d,
      0x6d,
      0x6f,
      0x64,
      0x75,
      0x6c,
      0x65,
      0x32
    ];
    let result = prependCRC(bytes, 'uavcan.protocol.GetNodeInfo');
    expect(result).toStrictEqual([
      0x33,
      0x1e,
      0xc2,
      0x51,
      0x01,
      0x00,
      0x00,
      0x00,
      0x00,
      0x01,
      0x00,
      0x01,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x00,
      0x01,
      0x02,
      0x03,
      0x04,
      0x05,
      0x06,
      0x07,
      0x08,
      0x09,
      0x0a,
      0x0b,
      0x0c,
      0x0d,
      0x0e,
      0x0f,
      0x00,
      0x63,
      0x68,
      0x2e,
      0x6f,
      0x63,
      0x74,
      0x61,
      0x6e,
      0x69,
      0x73,
      0x2e,
      0x6f,
      0x69,
      0x62,
      0x75,
      0x73,
      0x2e,
      0x6d,
      0x69,
      0x6e,
      0x69,
      0x2e,
      0x61,
      0x64,
      0x63,
      0x2d,
      0x64,
      0x61,
      0x63,
      0x2d,
      0x6d,
      0x6f,
      0x64,
      0x75,
      0x6c,
      0x65,
      0x32
    ]);
  });
});
